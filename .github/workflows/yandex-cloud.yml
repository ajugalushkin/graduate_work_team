name: Deploy to Yandex Cloud

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Создаем имена образов
env:
  ETL_IMAGE_URL: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/etl:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Логинимся в YC
    - name: Login to Yandex Cloud Container Registry
      id: login-cr
      uses: yc-actions/yc-cr-login@v2
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    # Сборка и загрузка образа
    - name: Build and Push to YCR
      uses: docker/build-push-action@v3
      with:
        context: ./etl
        file: ./etl/Dockerfile
        push: true
        tags: ${{ env.ETL_IMAGE_URL }}

  # Деплоим на VM
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.0.1
        env:
          ETL_IMAGE_URL: ${{ env.ETL_IMAGE_URL }}
          YC_VM_SSH: ${{ secrets.SSH_KEY }}
          YC_VM_USERNAME: ${{ secrets.SSH_USER }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          user-data-path: './yandex-cloud/user-data.yaml'
          docker-compose-path: './yandex-cloud/docker-compose.yc.yaml'