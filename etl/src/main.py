import os
import json
import time

from etl.src.core.config import settings
from etl.src.elastic.client import get_es_client, create_index_if_not_exists, index_bulk_movies

print("‚úÖ main.py: –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω")
print(f"üåç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: {settings.elastic_url}")
print(f"üìÇ –§–∞–π–ª –¥–∞–º–ø–∞: {settings.dump_file}")

def load_dump(es):
    if not os.path.exists(settings.dump_file):
        print(f"‚ùå –§–∞–π–ª –¥–∞–º–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {settings.dump_file}")
        print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ / {os.listdir('/data')}")
        exit(1)

    try:
        with open(settings.dump_file, "r", encoding="utf-8") as f:
            movies = json.load(f)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(movies)} —Ñ–∏–ª—å–º–æ–≤ –∏–∑ –¥–∞–º–ø–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}")
        exit(1)

    actions = []
    for movie in movies:
        action = {"index": {"_index": settings.elastic_index, "_id": movie["id"]}}
        actions.append(action)
        actions.append(movie)

    index_bulk_movies(es, actions)


if __name__ == "__main__":
    es=get_es_client()

    create_index_if_not_exists(es)

    load_dump(es)

    print("üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    time.sleep(2)